% Generated by roxygen2 (4.0.1): do not edit by hand
\name{write.avro}
\alias{write.avro}
\title{Avro Data Output}
\usage{
write.avro(x, file, name = "x", namespace = NULL, row.names = T,
  codec = c("null", "deflate", "snappy"), unflatten = TRUE)
}
\arguments{
\item{x}{a data.frame value}

\item{file}{an avro file path}

\item{name}{a character value indicating the Avro "name" for the top-level schema}

\item{namespace}{a character value indicating the Avro "namespace" for the top-level schema}

\item{row.names}{whether or not the "row.names" attribute should be exported with the dataset}

\item{codec}{a character value indicating the Avro codec to use}

\item{unflatten}{whether or not columns with "." in the their names should be "unflattened"}
}
\description{
Export R Value to Avro Data File
}
\details{
Optional \code{name} and \code{namespace} arguments can be used to specify the top-level Avro
element \code{name} and \code{namespace}.

If \code{unflatten=TRUE}, any columns with "." in the name will be combined into nested
Avro "record" schemas.  For example, the \code{\link{iris}} dataset would be stored as a
top-level record containing "Sepal" and "Petal" \code{record} fields and a "Species"
\code{string} field.  The "Sepal" and "Petal" \code{record} types would each contain
"Length" and "Width" \code{double} fields.

If \code{unflatten=FALSE}, any appearances of "." in the column names will be replaced with
"_" in order to create valid Avro Names.
}

